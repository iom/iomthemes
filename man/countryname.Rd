% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countryname.R
\name{countryname}
\alias{countryname}
\title{Toggle between country names, ISO codes and IOM Regions}
\usage{
countryname(key, from = "iso3", to = "name", exact = FALSE, quiet = FALSE)
}
\arguments{
\item{key}{(Case-insensitive) name or ISO code of country.}

\item{from}{Current type of \code{key}.}

\item{to}{Target type of \code{key}.}

\item{exact}{Whether to use exact matching.}

\item{quiet}{Turn off warning messages.}
}
\value{
String or vector of strings.
}
\description{
Easily convert a country name to its ISO code and vice versa.
Official United Nations country names are used. See \code{countrynames} for full
dictionary.
}
\details{
Under the default \code{exact = FALSE}, matching is done using
\code{stringr::str_detect}, which means keys need not be exact. For example,
\verb{countryname("iran", from = "name", to = "iso3)} will return the correct
ISO code "IRN" even if the dictionary name is "Islamic Republic of Iran".
One can therefore check a country's official name by running
\code{countryname("iran", from = "name")}.

If there are multiple matches, \code{countryname()} will only return the first
match. Thus, while "guinea" matches with four countries (Equatorial Guinea,
Guinea, Guinea-Bissau, Papua New Guinea), \code{countryname("guinea")} will only
return the keys for Equatorial Guinea, which is a problem if one wants to
obtain the keys for Guinea. Set \code{exact = TRUE} to use exact matching.

Regardless of how \code{exact} is set, matching remains case-insensitive,
}
\examples{
# Default export a series of country code to country name
countryname(c("deu", "phl"))

# Country name to Country code
countryname("germany", from = "name", to = "iso3")

# Country name to IOM region that matches the specific color palette pal_region
countryname("germany", from = "name", to = "iom.region")

# testing multiple match and  exact = TRUE
countryname("guinea", from = "name")

countryname("guinea", from = "name", exact = TRUE)

# names to full names
countryname("united kingdom", from = "name")
}
